raise_human_rage = {
	if = {
		limit = {
			has_idea = human_coups
		}
		swap_ideas =  {
			remove_idea = human_coups
			add_idea = human_coups_up
		}
	}
	if = {
		limit = {
			has_idea = human_coups_up
		}
		swap_ideas =  {
			remove_idea = human_coups_up
			add_idea = human_hate
		}
	}
}
acceptance_expand = {

		add_to_variable = {
			acceptance_value = 5
		}
		if = {
			limit = {
				OR = {
					has_government = democratic
					has_government = neutrality
				}
			}
			add_to_variable = { acceptance_stability = 0.025 }
			add_to_variable = { acceptance_militarism_penalty = -0.025 }
		}
		if = {
			limit = {
				OR = {
					has_government = communism
					has_government = fascism
				}
			}
			add_to_variable = { acceptance_stability = 0.01 }

		}
		clamp_variable = {
			var = acceptance_value
			min = 0
			max = 100
		}
		custom_effect_tooltip = expand_acceptance_tt
}

acceptance_expand_extra = {
	custom_effect_tooltip = expand_acceptance_tt_exta
	add_to_variable = {
			acceptance_value = 10
		}
		if = {
			limit = {
				OR = {
					has_government = democratic
					has_government = neutrality
				}
			}
			add_to_variable = { acceptance_stability = 0.05 }
			add_to_variable = { acceptance_militarism_penalty = -0.05 }
		}
		if = {
			limit = {
				OR = {
					has_government = communism
					has_government = fascism
				}
			}
			add_to_variable = { acceptance_stability = 0.02 }

		}
		clamp_variable = {
			var = acceptance_value
			min = 0
			max = 100
		}

}

d_acceptance_expand_extra = {
	custom_effect_tooltip = expand_acceptance_tt_exta
	add_to_variable = {
			acceptance_value = 10
		}
		if = {
			limit = {
				OR = {
					has_government = democratic
					has_government = neutrality
				}
			}
			add_to_variable = { acceptance_stability = 0.05 }
			add_to_variable = { acceptance_militarism_penalty = -0.05 }
		}
		if = {
			limit = {
				OR = {
					has_government = communism
					has_government = fascism
				}
			}
			add_to_variable = { acceptance_stability = 0.02 }

		}
		clamp_variable = {
			var = acceptance_value
			min = 0
			max = 100
		}

}
decrease_broken_level_tooltip = {
	if = {
		limit = {
			has_idea = SOU_industry_broken_lvl1
		}
		swap_ideas = {
			remove_idea = SOU_industry_broken_lvl1
			add_idea = SOU_industry_broken_lvl2
		}
	}
	if = {
		limit = {
			has_idea = SOU_industry_broken_lvl2
		}
		swap_ideas = {
			remove_idea = SOU_industry_broken_lvl2
			add_idea = SOU_industry_broken_lvl3
		}
	}
	if = {
		limit = {
			has_idea = SOU_industry_broken_lvl3
		}
		swap_ideas = {
			remove_idea = SOU_industry_broken_lvl3
			add_idea = SOU_industry_broken_lvl4
		}
	}
}

check_german_supports_level = {
	clamp_variable = {
		var = fasc_support
		min = 0
		max = 100
	}
	clamp_variable = {
		var = comm_support 
		min = 0
		max = 100
	}reg_comm_support_gb
	clamp_variable = {
		var = demo_support
		min = 0
		max = 100
	}
	clamp_variable = {
		var = goebbels_support
		min = 0
		max = fasc_support
	}
	clamp_variable = {
		var = himmler_support
		min = 0
		max = fasc_support
	}
}

check_statesoc_level = {
	clamp_variable = {
		var = uns_unity_statesoc
		min = 0.01
		max = 1 
	}
}



calculate_british_map_frames = {
	
	if = {
		limit = {
			AND = {
				check_variable = { 363.reg_fasc_support_gb > 363.reg_comm_support_gb }
				check_variable = { 363.reg_demo_support_gb = 0 }
			}
		}
		set_variable = { rg_363_stat_frame = 9 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 363.reg_comm_support_gb > 363.reg_fasc_support_gb }
				check_variable = { 363.reg_demo_support_gb = 0 }
			}
		}
		set_variable = { rg_363_stat_frame = 6 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 363.reg_demo_support_gb > 363.reg_comm_support_gb }
				check_variable = { 363.reg_fasc_support_gb = 0 }
			}
		}
		set_variable = { rg_363_stat_frame = 7 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 363.reg_demo_support_gb > 363.reg_fasc_support_gb }
				check_variable = { 363.reg_comm_support_gb = 0 }
			}
		}
		set_variable = { rg_363_stat_frame = 8 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 363.reg_comm_support_gb > 363.reg_demo_support_gb }
				check_variable = { 363.reg_fasc_support_gb = 0 }
			}
		}
		set_variable = { rg_363_stat_frame = 5 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 363.reg_fasc_support_gb > 363.reg_demo_support_gb }
				check_variable = { 363.reg_comm_support_gb = 0 }
			}
		}
		set_variable = { rg_363_stat_frame = 10 }
	}
	
	if = {
		limit = {
			check_variable = { 363.reg_fasc_support_gb > 89 } 
		}
		set_variable = { rg_363_stat_frame = 3 }
	}
	
	if = {
		limit = {
			check_variable = { 363.reg_comm_support_gb > 89 }
		}
		set_variable = { rg_363_stat_frame = 2 }
	}
	if = {
		limit = {
			check_variable = { 363.reg_demo_support_gb > 89 }
		}
		set_variable = { rg_363_stat_frame = 1 }
		
	}
	
	
	
	
	if = {
		limit = {
			AND = {
				check_variable = { 364.reg_fasc_support_gb > 364.reg_comm_support_gb }
				check_variable = { 364.reg_demo_support_gb = 0 }
			}
		}
		set_variable = { rg_364_stat_frame = 9 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 364.reg_comm_support_gb > 364.reg_fasc_support_gb }
				check_variable = { 364.reg_demo_support_gb = 0 }
			}
		}
		set_variable = { rg_364_stat_frame = 6 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 364.reg_demo_support_gb > 364.reg_comm_support_gb }
				check_variable = { 364.reg_fasc_support_gb = 0 }
			}
		}
		set_variable = { rg_364_stat_frame = 7 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 364.reg_demo_support_gb > 364.reg_fasc_support_gb }
				check_variable = { 364.reg_comm_support_gb = 0 }
			}
		}
		set_variable = { rg_364_stat_frame = 8 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 364.reg_comm_support_gb > 364.reg_demo_support_gb }
				check_variable = { 364.reg_fasc_support_gb = 0 }
			}
		}
		set_variable = { rg_364_stat_frame = 5 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 364.reg_fasc_support_gb > 364.reg_demo_support_gb }
				check_variable = { 364.reg_comm_support_gb = 0 }
			}
		}
		set_variable = { rg_364_stat_frame = 10 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 364.reg_demo_support_gb > 0 }
				check_variable = { 364.reg_comm_support_gb > 0 }
				check_variable = { 364.reg_fasc_support_gb > 0 }
			}
		}
				
		set_variable = { rg_364_stat_frame = 4 }
	}
	if = {
		limit = {
			check_variable = { 364.reg_fasc_support_gb > 89 } 
		}
		set_variable = { rg_364_stat_frame = 3 }
	}
	if = {
		limit = {
			check_variable = { 364.reg_comm_support_gb > 89 }
		}
		set_variable = { rg_364_stat_frame = 2 }
	}
	if = {
		limit = {
			check_variable = { 364.reg_demo_support_gb > 89 }
		}
		set_variable = { rg_364_stat_frame = 1 }
	}
	
	
	
	
	if = {
		limit = {
			AND = {
				check_variable = { 365.reg_fasc_support_gb > 365.reg_comm_support_gb }
				check_variable = { 365.reg_demo_support_gb = 0 }
			}
		}
		set_variable = { rg_365_stat_frame = 9 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 365.reg_comm_support_gb > 365.reg_fasc_support_gb }
				check_variable = { 365.reg_demo_support_gb = 0 }
			}
		}
		set_variable = { rg_365_stat_frame = 6 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 365.reg_demo_support_gb > 365.reg_comm_support_gb }
				check_variable = { 365.reg_fasc_support_gb = 0 }
			}
		}
		set_variable = { rg_365_stat_frame = 7 }
	}
	if = {
		limit = {
			AND = {
				check_variable = { 365.reg_demo_support_gb > 365.reg_fasc_support_gb }
				check_variable = { 365.reg_comm_support_gb = 0 }
			}
		}
		set_variable = { rg_365_stat_frame = 8 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 365.reg_comm_support_gb > 365.reg_demo_support_gb }
				check_variable = { 365.reg_fasc_support_gb = 0 }
			}
		}
		set_variable = { rg_365_stat_frame = 5 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 365.reg_fasc_support_gb > 365.reg_demo_support_gb }
				check_variable = { 365.reg_comm_support_gb = 0 }
			}
		}
		set_variable = { rg_365_stat_frame = 10 }
	}
	
	if = {
		limit = {
			AND = {
				check_variable = { 365.reg_demo_support_gb > 0 }
				check_variable = { 365.reg_comm_support_gb > 0 }
				check_variable = { 365.reg_fasc_support_gb > 0 }
			}
		}
				
		set_variable = { rg_365_stat_frame = 4 }
	}
	if = {
		limit = {
			check_variable = { 365.reg_demo_support_gb > 89 }
		}
		set_variable = { rg_365_stat_frame = 1 }
	}
	if = {
		limit = {
			check_variable = { 365.reg_fasc_support_gb > 89 } 
		}
		set_variable = { rg_365_stat_frame = 3 }
	}
	if = {
		limit = {
			check_variable = { 365.reg_comm_support_gb > 89 }
		}
		set_variable = { rg_365_stat_frame = 2 }
	}
	
	
}


check_british_regs_values = {
	clamp_variable = {
		var = 363.reg_demo_support_gb 
			min = 0
			max = 100 
	}
	clamp_variable = {
		var = 363.reg_comm_support_gb 
			min = 0
			max = 100 
	}
	clamp_variable = {
		var = 363.reg_fasc_support_gb 
			min = 0
			max = 100 
	}
	
	clamp_variable = {
		var = 364.reg_demo_support_gb 
			min = 0
			max = 100 
		}
	clamp_variable = {
		var = 364.reg_comm_support_gb 
			min = 0
			max = 100 
	}
	clamp_variable = {
		var = 364.reg_fasc_support_gb 
			min = 0
			max = 100 
	}
	
	clamp_variable = {
		var = 365.reg_demo_support_gb 
			min = 0
			max = 100 
		}
	clamp_variable = {
		var = 365.reg_comm_support_gb 
			min = 0
			max = 100 
	}
	clamp_variable = {
		var = 365.reg_fasc_support_gb 
			min = 0
			max = 100 
	}
	
}


GRB_ancom_revolution_start = {
	hidden_effect = {
		set_country_flag = GRB_ancom_revolt
		start_civil_war = {
			ruling_party = communism
			ideology = ROOT
			size = 0.5
			only_own_territory = no
			keep_political_leader = no		
		}
		add_popularity = {
			ideology = communism
			popularity = 0.25
		}
		generate_character = {
			token_base = GRB_ancom_council
			name = GRB_ancom_council
			country_leader = {
				ideology = anarchist_communism
				traits = { grb_ancom_trait }
				expire="1999.9.9.1"
				id=-1
			}
		}
		promote_character = GRB_ancom_council
		meta_effect = {
			text = {
				set_cosmetic_tag = [TAG]_ANCOM
			}
			TAG = "[ROOT.GetTag]"
		}
	}
	custom_effect_tooltip = start_ancom_revolution
	add_ai_strategy = {
		type = alliance
		id = GRB 
		value = 500
	}
	GRB = {
		add_to_faction = ROOT 
		
	}
	every_enemy_country = {
		GRB = {
			add_to_war = {
				targeted_alliance = ROOT
				enemy = PREV
				hostility_reason = ancom_revolution
			}
		}
	}
	load_focus_tree = generic_focus
}